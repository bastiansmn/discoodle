{"version":3,"sources":["webpack:///./src/components/ChatContent.vue?4a4e","webpack:///./src/components/AddUser.vue","webpack:///./src/components/AddUser.vue?5af5","webpack:///./src/components/ChatContent.vue","webpack:///./src/components/ChatContent.vue?39c0","webpack:///./src/components/AddUser.vue?7a52","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["class","style","id","clickEvent","usersToAdd","user","key","charAt","toUpperCase","removeUser","type","placeholder","autocomplete","list","name","isEnter","showAutocomplete","getFriends","filter","elt","users","map","e","username","includes","friend","value","addUser","$emit","props","required","Boolean","methods","event","target","className","this","inputValue","document","querySelector","push","keyCode","data","computed","mounted","getCurrentConv","a","get","then","response","render","__scopeId","src","alt","$route","fullPath","query","pinAdd","switchPinDisplay","showAddUser","showUserList","right","width","bg-color","roomAdminID","getUser","promoteAdmin","removerUser","addUsers","show-autocomplete","showPinned","pinned","length","messages","sender","content","unpinMessage","message_id","message","belong_to_myself","message_date","edited","pinnedMessage","deletedMessage","editedMessage","getWritersAsText","actionInput","showEmoji","insertEmoji","ref","uploadImage","stompClient","components","AddUser","EmojiPicker","Message","writers","Number","getMessagesFromJSON","connect","getUserOfRoom","beforeRouteUpdate","disconnect","unmounted","res","forEach","send","pop","writing","inputContent","displayMessage","JSON","stringify","ws","over","subscribe","sdkEvent","onMessageReceived","errorCallBack","setTimeout","payload","parse","body","unshift","convUUID","containUsername","user_id","location","replace","messageContent","post","conv_uuid","Date","now","sort","b","messageID","put","c","splice","delete","file","$refs","files","temp","FormData","append","url","method","headers","Accept","filterEmoji","regex","emoji","matchAll","replaceAll","filterMarkdown","filterPing","mention","mardkdown","emojis","ping","bool","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","proto","forced","callbackfn","arguments","undefined"],"mappings":"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","file":"static/js/messages/:id.87315b74.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ChatContent.vue?vue&type=style&index=0&id=f9f75fbe&scoped=true&lang=css\"","<template>\n   <div class=\"AddUserInConv\" @click=\"clickEvent\">\n      <div class=\"content\">\n         Quel(s) utilisateur(s) voulez-vous ajouter ?\n\n         <div class=\"users\">\n            <div :key=\"user\" class=\"userInfo\" v-for=\"user in usersToAdd\">\n               <div>\n                  {{ user?.charAt(0).toUpperCase() }}\n               </div>\n               <span style=\"width: calc(100% - 85px)\">\n                  {{ user }}\n               </span>\n               <button class=\"close\" @click=\"removeUser(user)\">X</button>\n            </div>\n         </div>\n\n         <div class=\"input-user\">\n            <input type=\"text\" placeholder=\"Entrez un nom d'utilisateur...\" autocomplete=\"off\" list=\"friends-list\" name=\"name_room\" @keypress=\"isEnter\">\n            <datalist id=\"friends-list\" v-if=\"showAutocomplete\">\n               <option :key=\"friend.id\" v-for=\"friend in getFriends.filter(elt => !users.map(e => e.username).includes(elt.username))\" :value=\"friend.username\"></option>\n            </datalist>\n            <button @click=\"addUser\">\n               +\n            </button>\n         </div>\n\n         <button class=\"submit\" @click=\"$emit('addUsers', usersToAdd);\">\n            Ajouter les utilisateurs séléctionnés !\n         </button>\n\n         <button class=\"closePopUp\" @click=\"$emit('desactivatePopUp')\">\n            X\n         </button>\n      </div>\n   </div>\n</template>\n\n<script>\nimport {mapGetters} from \"vuex\";\nimport axios from \"axios\";\n\nexport default {\n   name: \"AddUserInConv\",\n   props: {\n      showAutocomplete: {\n         required: true,\n         type: Boolean\n      },\n   },\n   methods: {\n      clickEvent(event) {\n         if (event.target.className === \"AddUserInConv\")\n            this.$emit('desactivatePopUp');\n      },\n      addUser() {\n         const inputValue = document.querySelector(\".input-user > input\").value;\n         if (inputValue !== \"\" && !this.usersToAdd.includes(inputValue))\n            this.usersToAdd.push(inputValue);\n         document.querySelector(\".input-user > input\").value = \"\";\n      },\n      removeUser(username) {\n         this.usersToAdd = this.usersToAdd.filter(elt => elt !== username);\n      },\n      isEnter(event) {\n         if (event.keyCode === 13)\n            this.addUser();\n      }\n   },\n   data() {\n      return {\n         usersToAdd: [],\n         users: []\n      }\n   },\n   computed: {\n      ...mapGetters(['getFriends', 'getCurrentConv'])\n   },\n   mounted() {\n      if (this.getCurrentConv !== \"\")\n         axios.get(`/api/rooms/findUserOfRoom?room_id=${this.getCurrentConv}`).then(response => {\n            this.users = response.data;\n         })\n   }\n}\n</script>\n\n<style scoped>\n.AddUserInConv {\n   z-index: 2000;\n   position: fixed;\n   top: 0;\n   left: 0;\n   width: 100vw;\n   height: 100vh;\n   animation: 0.4s ease-in-out appear-opacity;\n\n   display: flex;\n   align-items: center;\n   justify-content: center;\n}\n\n.AddUserInConv:before {\n   content: \"\";\n   position: fixed;\n   background-color: #2d2d2d;\n   opacity: 0.3;\n   width: 100vw;\n   height: 100vh;\n}\n\n.content {\n   border-radius: 12px;\n   background-color: #F4F4F4;\n   color: #454150;\n\n   position: relative;\n\n   font-size: 20px;\n   font-weight: 600;\n\n   width: 450px;\n   max-height: 50vh;\n   padding: 30px;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n}\n\n.closePopUp {\n   position: absolute;\n   top: 0;\n   right: 0;\n   width: 25px;\n   height: 25px;\n\n   color: #F4F4F4;\n\n   border-radius: 50%;\n   background-color: #454150;\n   border: none;\n   outline: none;\n\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   transform: translateY(-25%) translateX(25%);\n\n   cursor: pointer;\n}\n\n.closePopUp:hover {\n   background-color: #E85C5C;\n}\n\n.input-user {\n   width: 100%;\n   height: 30px;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   margin-top: 20px;\n   margin-bottom: 20px;\n}\n\n.input-user > input {\n   height: 100%;\n   width: calc(100% - 50px);\n   border: none;\n   outline: none;\n   background-color: #454150;\n   color: #f4f4f4;\n   padding-left: 13px;\n   padding-right: 7px;\n   border-radius: 9099px;\n}\n.input-user > input::placeholder {\n   color: #969696;\n}\n\n.input-user > button {\n   height: 30px;\n   width: 30px;\n   margin-left: 20px;\n   background-color: #E85C5C;\n   border: none;\n   outline: none;\n   border-radius: 50%;\n   font-size: 28px;\n   font-weight: 600;\n   color: #f4f4f4;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   cursor: pointer;\n}\n\n\n.submit {\n   border: none;\n   outline: none;\n   background-color: #E85C5C;\n   font-size: 15px;\n   color: #f4f4f4;\n   font-weight: 600;\n   padding-left: 10px;\n   padding-right: 10px;\n   height: 30px;\n   border-radius: 5000px;\n   cursor: pointer;\n}\n\n.users {\n   margin-top: 15px;\n   width: 100%;\n   display: flex;\n   flex-direction: column;\n   align-content: center;\n   justify-content: flex-start;\n\n   overflow-y: auto;\n   overflow-x: hidden;\n   padding-right: 4px;\n}\n\n.userInfo {\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   margin-bottom: 5px;\n}\n\n.userInfo > div {\n   width: 35px;\n   height: 35px;\n   background-color: #7f7f7f;\n   color: #f4f4f4;\n   font-size: 20px;\n   font-weight: 600;\n   display: flex;\n   align-items: center;\n   justify-content: center;\n   border-radius: 50%;\n   margin-right: 15px;\n}\n\n.userInfo > button {\n   width: 25px;\n   height: 25px;\n   background-color: #454150;\n   font-size: 15px;\n   color: #f4f4f4;\n   font-weight: 600;\n   border: none;\n   outline: none;\n   border-radius: 50%;\n   margin-left: 15px;\n   cursor: pointer;\n}\n\n@keyframes appear-opacity {\n   from {\n      /* transform: translateX(100%); */\n      opacity: 0;\n   }\n   to {\n      /* transform: translateX(0); */\n      opacity: 1;\n   }\n}\n</style>","import { render } from \"./AddUser.vue?vue&type=template&id=3c631f8d&scoped=true\"\nimport script from \"./AddUser.vue?vue&type=script&lang=js\"\nexport * from \"./AddUser.vue?vue&type=script&lang=js\"\n\nimport \"./AddUser.vue?vue&type=style&index=0&id=3c631f8d&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-3c631f8d\"\n\nexport default script","<template>\n   <div class=\"ChatContent\"\n        :key=\"$route.fullPath\">\n      <div class=\"conv-info\">\n         <div>\n            <span style=\"font-size: 23px; font-weight: 500; color: #F4F4F4\">{{ $route.query.name }}</span>\n            <div class=\"top-right-buttons\">\n               <button :style=\"pinAdd ? { animation: '' } : { animation: 'none' }\" style=\"height: 100%;\"\n                       @click=\"switchPinDisplay\">\n                  <img src=\"../assets/pin.png\" alt=\"\" style=\"height: 60%;\">\n               </button>\n               <button style=\"color: #F4F4F4; font-size: 33px; font-weight: 500; height: 100%\"\n                       @click=\"showAddUser = true\">\n                  +\n               </button>\n               <button style=\"cursor: pointer;\" @click=\"showUserList = true;\">\n                  <img src=\"../assets/user.svg\" alt=\"\" style=\"width: 25px;\">\n               </button>\n               <w-drawer\n                     v-model=\"showUserList\"\n                     right\n                     width=\"350px\"\n                     bg-color=\"grey-dark5\"\n               >\n                  <div class=\"user-list\">\n                     <span style=\"font-size: 18px; color: #F4F4F4; font-weight: 600; margin-bottom: 10px;\">Utilisateur(s) de la room :</span>\n                     <div :key=\"user.id\" class=\"user\" v-for=\"user in users\">\n                        <img src=\"../assets/crown.svg\" style=\"height: 80%; margin-right: 10px;\" alt=\"\"\n                             v-if=\"user.id === roomAdminID\">\n                        {{ user.username }}\n                        <div>\n                           <button v-if=\"user.id !== getUser.id && getUser.id === roomAdminID\"\n                                   style=\"margin-right: 6px;\" @click=\"promoteAdmin(user.id)\">\n                              <img src=\"../assets/crown.svg\" style=\"height: 70%\" alt=\"\">\n                           </button>\n                           <button v-if=\"getUser.id === roomAdminID && user.id !== getUser.id && user.id !== roomAdminID\"\n                                   @click=\"removerUser(user.id)\">\n                              X\n                           </button>\n                        </div>\n                     </div>\n                  </div>\n               </w-drawer>\n               <AddUser v-if=\"showAddUser\" @addUsers=\"addUsers\" @desactivatePopUp=\"showAddUser = false;\"\n                        :show-autocomplete=\"true\"/>\n            </div>\n\n            <div class=\"pinned-message\" v-if=\"showPinned\">\n               <div>\n                  {{ pinned.length === 0 ? \"Aucun message épinglé\" : \"\" }}\n                  <div class=\"pinned-message-content\" :key=\"messages\" v-for=\"messages in pinned\">\n                     {{ messages.sender }} : <br>\n                     {{ messages.content }} <br>\n                     <button class=\"unpin-message\" @click=\"unpinMessage(messages.message_id)\">\n                        X\n                     </button>\n                  </div>\n               </div>\n            </div>\n\n         </div>\n      </div>\n      <div class=\"conv-messages\">\n         <span v-if=\"messages.length === 0\"\n               style=\"align-self: center; font-size: 15px; font-weight: 500; color: #F4F4F4\"> Soyez le premier à envoyer un message à {{\n               $route.query.name\n            }}</span>\n         <Message :key=\"message\" v-for=\"message in messages\"\n                  :content=\"message.content\"\n                  :sender=\"message.sender\"\n                  :belong_to_myself=\"message.sender === getUser.username\"\n                  :message_date=\"message.message_date\"\n                  :message_id=\"message.message_id\"\n                  :edited=\"message.edited\"\n                  @pinnedMessage=\"pinnedMessage\"\n                  @deletedMessage=\"deletedMessage\"\n                  @editedMessage=\"editedMessage\"\n         />\n      </div>\n      <div class=\"conv-input\">\n         <span>\n            {{ getWritersAsText() }}\n         </span>\n         <div>\n            <input type=\"text\" autocomplete=\"off\" :placeholder=\"`Envoyer un message à ${ $route.query.name }`\"\n                   @keydown=\"actionInput\">\n            <div class=\"right-side-input\">\n               <EmojiPicker @selected-emoji=\"insertEmoji\" @closeEmoji=\"showEmoji = false\" v-if=\"showEmoji\"\n                            class=\"emojiPicker\"/>\n               <button style=\"height: 32px; width: 32px;\" @click=\"showEmoji = !showEmoji\">\n                  <img src=\"../assets/happy.svg\" alt=\"Smiley\">\n               </button>\n               <label class=\"submit-file\" style=\"cursor: pointer;\">\n                  +\n                  <input type=\"file\" ref=\"uploadImage\" @change=\"uploadImage()\" style=\"height: 0; width: 0;\">\n               </label>\n            </div>\n         </div>\n      </div>\n   </div>\n</template>\n\n<script>\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport {mapGetters} from \"vuex\";\nimport axios from 'axios';\nimport marked from \"marked\";\nimport Message from \"@/components/common/Message\";\nimport emojis from \"@/assets/emojis_uncathegorized\";\nimport EmojiPicker from \"@/components/common/EmojiPicker\";\nimport AddUser from \"@/components/AddUser\";\n\nlet stompClient = null;\n\nexport default {\n   name: \"ChatContent\",\n   components: {\n      AddUser,\n      EmojiPicker,\n      Message\n   },\n   data() {\n      return {\n         messages: [],\n         users: [],\n         pinned: [],\n         writers: [],\n         showPinned: false,\n         showEmoji: false,\n         pinAdd: false,\n         showAddUser: false,\n         showUserList: false,\n         roomAdminID: Number,\n      }\n   },\n   mounted() {\n      this.getMessagesFromJSON();\n      this.connect();\n      this.getUserOfRoom()\n      axios.get(`/api/rooms/findAdminOfRoom?room_id=${this.getCurrentConv}`).then(response => {\n         this.roomAdminID = response.data.id;\n      })\n   },\n   beforeRouteUpdate() {\n      this.disconnect();\n      this.getMessagesFromJSON();\n      this.getUserOfRoom()\n      this.connect();\n      axios.get(`/api/rooms/findUserOfRoom?room_id=${this.getCurrentConv}`).then(response => {\n         this.users = response.data;\n      });\n      axios.get(`/api/rooms/findAdminOfRoom?room_id=${this.getCurrentConv}`).then(response => {\n         this.roomAdminID = response.data.id;\n      })\n   },\n   unmounted() {\n      this.disconnect();\n   },\n   methods: {\n      getWritersAsText() {\n         if (this.writers.length === 0)\n            return \"\";\n         if (this.writers.length === 1)\n            return `${this.writers[0]} est en train d'écrire...`\n         if (this.writers.length > 4)\n            return \"Plusieurs personnes sont en train d'écrire\";\n         let res = \"\";\n         this.writers.forEach(elt => {\n            res += (elt === this.writers[this.writers.length - 1] ? `et ${elt}` : `${elt}${elt === this.writers[this.writers.length - 2] ? \"\" : \",\"} `)\n         });\n         return `${res} sont en train d'écrire...`;\n      },\n      actionInput(event) {\n         if (event.keyCode === 13 && document.querySelector(\".conv-input > div > input\").value !== \"\") {\n            this.send();\n            this.writers.pop(this.getUser.username);\n         } else if (event.keyCode !== 13) {\n            this.writing();\n            const inputContent = document.querySelector(\".conv-input > div > input\");\n            inputContent.value = this.displayMessage(inputContent.value, false, true, false);\n         }\n      },\n      getUserOfRoom() {\n         axios.get(`/api/rooms/findUserOfRoom?room_id=${this.getCurrentConv}`).then(response => {\n            this.users = response.data;\n         });\n      },\n      writing() {\n         if (!this.writers.includes(this.getUser.username)) {\n            stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n               sender: this.getUser.username,\n               type: \"WRITING\"\n            }));\n         }\n      },\n      connect() {\n         let ws = new SockJS(\"/ws\");\n         stompClient = Stomp.over(ws);\n         // Comment the next line if you want to show websocket's logs\n         // stompClient.debug = null\n\n         stompClient.connect({}, () => {\n            stompClient.subscribe(`/conversations/rooms/${this.getCurrentConv}`, (sdkEvent) => {\n               this.onMessageReceived(sdkEvent);\n            })\n         }, this.errorCallBack);\n      },\n      disconnect() {\n         if (stompClient !== null) {\n            stompClient.disconnect();\n         }\n      },\n      errorCallBack() {\n         setTimeout(() => {\n            this.connect();\n         }, 5000);\n      },\n      onMessageReceived(payload) {\n         let message = JSON.parse(payload.body);\n\n         if (message.sender !== this.getUser.username) {\n            if (message.type === \"MESSAGE\") {\n\n               this.messages.unshift({\n                  convUUID: message.convUUID,\n                  message_id: message.message_id,\n                  content: message.content,\n                  sender: message.sender,\n                  message_date: message.message_date,\n                  pinned: message.pinned,\n                  edited: false,\n               })\n            } else if (message.type === \"WRITING\") {\n               if (!this.writers.includes(message.sender)) {\n                  this.writers.push(message.sender)\n                  setTimeout(() => {\n                     this.writers.pop(message.sender)\n                  }, 5000)\n               }\n            } else if (message.type === \"PINNED\") {\n               this.messages.forEach(elt => {\n                  if (elt.message_id === message.message_id && !this.pinned.includes(elt))\n                     this.pinned.push(elt);\n               });\n            } else if (message.type === \"UNPINNED\") {\n               this.pinned = this.pinned.filter(elt => elt.message_id !== message.message_id);\n            } else if (message.type === \"DELETED\") {\n               this.messages = this.messages.filter(elt => elt.message_id !== message.message_id);\n               this.pinned = this.pinned.filter(elt => elt.message_id !== message.message_id);\n            } else if (message.type === \"EDITED\") {\n               this.messages.forEach(elt => {\n                  if (elt.message_id === message.message_id) {\n                     elt.content = message.content;\n                     elt.edited = true;\n                  }\n               });\n               this.pinned.forEach(elt => {\n                  if (elt.message_id === message.message_id) {\n                     elt.content = message.content;\n                     elt.edited = true;\n                  }\n               });\n            } else if (message.type === \"USERS_ADDED\") {\n               message.users.forEach(user => {\n                  if (this.containUsername(user)) {\n                     axios.get(`/api/users/findByUserName?username=${user}`).then(response => {\n                        this.users.push(response.data)\n                     })\n                  }\n               })\n               setTimeout(() => {\n                  this.getUserOfRoom()\n               }, 500)\n               this.showAddUser = false;\n            } else if (message.type === \"USER_REMOVED\") {\n               this.users = this.users.filter(elt => elt.id !== message.user_id);\n               setTimeout(() => {\n                  this.getUserOfRoom()\n               }, 500)\n               if (message.user_id === this.getUser.id)\n                  location.replace(\"/messages\")\n            } else if (message.type === \"CHANGE_ADMIN\") {\n               this.roomAdminID = message.user_id;\n            }\n         }\n      },\n      send() {\n         let messageContent = document.querySelector(\".conv-input > div > input\");\n\n         if (messageContent && stompClient) {\n            axios.post(`/api/messages/sendMessage?room_uuid=${this.getCurrentConv}`, {\n               conv_uuid: this.getCurrentConv,\n               content: messageContent.value,\n               sender: this.getUser.username,\n               message_date: Date.now()\n            }).then(response => {\n               this.messages.unshift(response.data);\n               stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify(response.data))\n               messageContent.value = \"\";\n            });\n         }\n      },\n      getMessagesFromJSON() {\n         axios.get(`/api/messages?room_uuid=${this.getCurrentConv}`).then(response => {\n            this.messages = response.data.sort((a, b) => b.message_date - a.message_date);\n            this.pinned = this.messages.filter(elt => (elt.pinned === true));\n         });\n      },\n      switchPinDisplay() {\n         this.showPinned = !this.showPinned;\n      },\n      unpinMessage(messageID) {\n         axios.put(`/api/messages/unpinMessage?message_id=${messageID}`).then(() => {\n            let c = 0;\n            this.pinned.forEach(elt => {\n               if (elt.message_id === messageID)\n                  this.pinned.splice(c, 1);\n               c++;\n            })\n            stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n               message_id: messageID,\n               type: \"UNPINNED\"\n            }));\n         })\n      },\n      pinnedMessage(messageID) {\n         this.messages.forEach(elt => {\n            if (elt.message_id === messageID && !this.pinned.includes(elt)) {\n               stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n                  message_id: messageID,\n                  type: \"PINNED\"\n               }));\n               this.pinned.push(elt);\n            }\n         })\n      },\n      deletedMessage(messageID) {\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            message_id: messageID,\n            type: \"DELETED\"\n         }));\n      },\n      editedMessage(messageID, content) {\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            message_id: messageID,\n            content: content,\n            type: \"EDITED\"\n         }));\n      },\n      async addUsers(users) {\n         for (const user of users) {\n            if (this.containUsername(user)) {\n               await axios.get(`/api/users/findByUserName?username=${user}`).then(response => {\n                  axios.post(`/api/rooms/addNewMember?room_id=${this.getCurrentConv}&user_id=${response.data.id}`)\n               })\n            }\n         }\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            users: users,\n            type: \"USERS_ADDED\"\n         }));\n      },\n      removerUser(user_id) {\n         axios.delete(`/api/rooms/removeMember?room_id=${this.getCurrentConv}&user_id=${user_id}`)\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            user_id: user_id,\n            type: \"USER_REMOVED\"\n         }));\n      },\n      promoteAdmin(user_id) {\n         axios.put(`/api/rooms/changeAdmin?room_id=${this.getCurrentConv}&admin=${user_id}`)\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            user_id: user_id,\n            type: \"CHANGE_ADMIN\"\n         }));\n      },\n\n\n      uploadImage() {\n         let file = this.$refs.uploadImage.files[0];\n         let temp = new FormData();\n         temp.append(\"file\", file);\n         axios({\n            url: `/api/uploadfile/uploadImageInChat?room_id=${this.getCurrentConv}`,\n            method: 'POST',\n            data: temp,\n            headers: {\n               Accept: 'application/json',\n               'Content-type': 'multipart/form-data'\n            }\n         }).then(response => {\n            if (response.data !== \"L'extension n'est pas un fichier jpg ou png, il ne peut donc pas être upload\" && response.data !== \"Erreur lors du téléchargement de l'image !\") {\n               axios.post(`/api/messages/sendMessage?room_uuid=${this.getCurrentConv}`, {\n                  conv_uuid: this.getCurrentConv,\n                  content: `![${\"Image de \" + this.getUser.username}](${response.data})`,\n                  sender: this.getUser.username,\n                  message_date: Date.now()\n               }).then(response => {\n                  this.messages.unshift(response.data);\n                  stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify(response.data))\n               });\n            }\n         })\n      },\n\n      filterEmoji(content) {\n         // Regex to match with the emoji string encode ( ':xxxxx_xxx_xxx_xxx:' where '_' is optionnal )\n         const regex = \":[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*:\";\n         const emoji = [...content.matchAll(regex)];\n         if (emoji && emoji.length > 0) {\n            emoji.forEach(elt => {\n               if (emojis[elt[0].replaceAll(\":\", \"\")])\n                  content = content.replace(elt[0], emojis[elt[0].replaceAll(\":\", \"\")]);\n            })\n         }\n         return content;\n      },\n      filterMarkdown(content) {\n         return marked(content);\n      },\n      filterPing(content) {\n         if (content.includes(`@${this.getUser.username}`)) {\n            this.mention = true;\n            return content.replaceAll(`@${this.getUser.username}`, `@${this.getUser.name}`);\n         }\n         return content;\n      },\n      displayMessage(content, mardkdown, emojis, ping) {\n         if (ping)\n            content = this.filterPing(content);\n         if (emojis)\n            content = this.filterEmoji(content);\n         if (mardkdown)\n            content = this.filterMarkdown(content);\n         return content;\n      },\n\n      insertEmoji(emoji) {\n         document.querySelector(\".conv-input > div > input\").value += emoji;\n      },\n\n      containUsername(username) {\n         let bool = false;\n         this.getFriends.forEach(elt => {\n            if (elt.username === username)\n               bool = true;\n         })\n         return bool;\n      },\n   },\n   computed: {\n      ...mapGetters(['getColors', 'getCurrentConv', 'getUser', 'getFriends'])\n   }\n}\n</script>\n\n<style scoped>\nbutton {\n   background: none;\n   border: none;\n   outline: none;\n   cursor: pointer;\n}\n\n.ChatContent {\n   width: 100%;\n   height: 100%;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n}\n\n.conv-info {\n   width: 100%;\n   height: 80px;\n   background-color: #18161F;\n\n   display: flex;\n   justify-content: space-between;\n   align-items: center;\n}\n\n.conv-info > div {\n   position: relative;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n   margin: auto;\n\n   width: 95%;\n   height: 60px;\n}\n\n.top-right-buttons {\n   position: relative;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   height: 40px;\n   width: 100px;\n}\n\n.conv-input {\n   height: 100px;\n   width: 100%;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n}\n\n.conv-input > div {\n   width: 90%;\n   height: 46px;\n   background-color: #F4F4F4;\n   border-radius: 100px;\n\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   padding-left: 15px;\n   padding-right: 4px;\n}\n\n.conv-input > span {\n   color: #F4F4F4;\n   font-size: 12px;\n   width: 90%;\n   padding-left: 15px;\n   height: 20px;\n   margin-bottom: 5px;\n\n}\n\n.conv-messages {\n   height: calc(100% - 180px);\n   width: 95%;\n   align-self: center;\n\n   display: flex;\n   flex-direction: column-reverse;\n\n   overflow-y: auto;\n   overflow-x: hidden;\n   padding-right: 8px;\n}\n\n.right-side-input {\n   position: relative;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n\n   height: 44px;\n   width: 90px;\n}\n\n.submit-file {\n   background-color: #454150;\n   height: 38px;\n   width: 38px;\n   color: #F4F4F4;\n   font-size: 30px;\n   font-weight: 600;\n\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   border-radius: 50%;\n}\n\n.submit-file:hover {\n   background-color: #E85C5C;\n   color: #F4F4F4;\n}\n\n.conv-input > div > input {\n   outline: none;\n   border: none;\n   background: none;\n\n   max-width: calc(100% - 100px);\n   width: 1000px;\n   height: 35px;\n   font-size: 15px;\n   color: #454150;\n}\n\n.conv-input > div > input::placeholder {\n   font-size: 15px;\n   color: #909090;\n}\n\n\n.pinned-message {\n   animation: appear-opacity ease-in-out 0.5s;\n\n   position: absolute;\n\n   z-index: 500;\n\n   padding: 10px 10px 0 10px;\n   border-radius: 12px;\n   right: 70px;\n   top: 70px;\n   min-width: 350px;\n   background-color: #909090;\n}\n\n.pinned-message > div {\n   position: relative;\n   width: 100%;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: flex-start;\n}\n\n.pinned-message > div::before {\n   content: \"\";\n   position: absolute;\n   right: 0;\n   top: 0;\n   width: 13px;\n   height: 13px;\n   background-color: #909090;\n   transform: rotate(45deg) translateY(-9px) translateX(-15px);\n}\n\n.pinned-message-content {\n   position: relative;\n   padding: 10px;\n   margin-bottom: 10px;\n   width: 100%;\n   background-color: #C4C4C4;\n   color: #454150;\n   border-radius: 12px;\n}\n\n#pin > img {\n   width: 20px;\n   height: 20px;\n}\n\n#pin {\n   outline: none;\n   background: none;\n   border: none;\n\n   cursor: pointer;\n}\n\n#pin:hover {\n   transform: scale(1.1) rotate(-10deg);\n}\n\n.unpin-message {\n   position: absolute;\n   right: 5px;\n   top: 5px;\n   height: 20px;\n   width: 20px;\n   border-radius: 29px;\n   background-color: #454150;\n   color: #f4f4f4;\n   cursor: pointer;\n}\n\n.unpin-message:hover {\n   transform: scale(1.1);\n}\n\n.emojiPicker {\n   position: absolute;\n   top: -10px;\n   left: 32px;\n   transform: translateX(-100%) translateY(-100%);\n}\n\n.user-list {\n   padding: 20px;\n   width: 100%;\n   height: 100%;\n\n   display: flex;\n   align-items: flex-start;\n   justify-content: flex-start;\n   flex-direction: column;\n}\n\n.user {\n   position: relative;\n   width: 100%;\n   height: 40px;\n   background-color: #8F8F8F;\n   border-radius: 12px;\n\n   display: flex;\n   align-items: center;\n   justify-content: flex-start;\n   padding-left: 15px;\n\n   color: #F4F4F4;\n   font-size: 18px;\n   font-weight: 600;\n   margin-bottom: 10px;\n}\n\n.user > div {\n   position: absolute;\n   right: 20px;\n\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n}\n\n.user > div > button {\n   font-size: 18px;\n   width: 22px;\n   height: 22px;\n   font-weight: 600;\n   color: #F4F4F4;\n}\n\n@keyframes appear-opacity {\n   from {\n      /* transform: translateX(100%); */\n      opacity: 0;\n   }\n   to {\n      /* transform: translateX(0); */\n      opacity: 1;\n   }\n}\n</style>\n","import { render } from \"./ChatContent.vue?vue&type=template&id=f9f75fbe&scoped=true\"\nimport script from \"./ChatContent.vue?vue&type=script&lang=js\"\nexport * from \"./ChatContent.vue?vue&type=script&lang=js\"\n\nimport \"./ChatContent.vue?vue&type=style&index=0&id=f9f75fbe&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-f9f75fbe\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AddUser.vue?vue&type=style&index=0&id=3c631f8d&scoped=true&lang=css\"","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}