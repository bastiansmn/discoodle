{"version":3,"sources":["webpack:///./src/components/groups/Channel.vue?5a6b","webpack:///./src/components/groups/Channel.vue","webpack:///./src/components/groups/Channel.vue?49f7"],"names":["class","style","src","alt","room","room_name","pinAdd","showPinned","showUserList","right","width","bg-color","getGroup","roles","role","key","id","name","users","length","user","room_admin","last_name","toUpperCase","pinned","messages","sender","content","Date","message_date","toLocaleDateString","rights","canModifyRoom","unpinMessage","message_id","canReadMessage","$route","query","message","belong_to_myself","getUser","username","edited","can-pin","can-remove","pinnedMessage","deletedMessage","editedMessage","getWritersAsText","canSendMessage","type","autocomplete","placeholder","actionInput","showEmoji","insertEmoji","ref","uploadImage","stompClient","components","EmojiPicker","Message","computed","data","writers","canChangeGroup","canModifyNotes","canStream","methods","connect","ws","over","debug","subscribe","getCurrentConv","sdkEvent","onMessageReceived","this","errorCallBack","disconnect","setTimeout","payload","JSON","parse","body","unshift","convUUID","includes","push","pop","forEach","elt","filter","containUsername","a","get","then","response","getUserOfRoom","user_id","location","replace","roomAdminID","send","messageContent","document","querySelector","post","conv_uuid","value","now","stringify","writing","promoteAdmin","put","messageID","c","splice","addUsers","removerUser","delete","file","$refs","files","temp","FormData","append","url","method","headers","Accept","emoji","filterEmoji","regex","matchAll","replaceAll","filterMarkdown","filterPing","mention","displayMessage","mardkdown","emojis","ping","getMessagesFromJSON","sort","b","event","keyCode","inputContent","res","bool","getFriends","mounted","groups_id","fullRights","beforeRouteUpdate","unmounted","__exports__","render"],"mappings":"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","file":"js/chunk-8854e13c.c93ff7e2.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./Channel.vue?vue&type=style&index=0&id=8ed8cba4&scoped=true&lang=css\"","<template>\n   <div class=\"Channel\">\n      <div class=\"infos\">\n         <div>\n            <h2 class=\"name\" style=\"color: #F4F4F4;\">{{ room.room_name }}</h2>\n            <div class=\"buttons\">\n               <button :style=\"pinAdd ? { animation: '' } : { animation: 'none' }\" style=\"height: 100%;\"\n                       @click=\"showPinned = !showPinned;\">\n                  <img src=\"/assets/pin.png\" alt=\"\">\n               </button>\n               <button style=\"cursor: pointer;\" @click=\"showUserList = true;\">\n                  <img src=\"/assets/user.svg\" alt=\"\">\n               </button>\n               <w-drawer\n                     v-model=\"showUserList\"\n                     right\n                     width=\"350px\"\n                     bg-color=\"grey-dark5\"\n\n                     style=\"z-index: 550\"\n               >\n                  <div class=\"user-list\">\n                     <span style=\"font-size: 18px; color: #F4F4F4; font-weight: 600; margin-bottom: 30px;\">Utilisateur(s) de la room :</span>\n                     <div class=\"role\" :key=\"role.id\" v-for=\"role in getGroup.roles\">\n                        <span>{{ role.name }} - {{ role.users.length }}</span>\n                        <div :key=\"user.id\" class=\"user\" v-for=\"user in role.users\">\n                           <img src=\"../../../../assets/crown.svg\" style=\"height: 80%; margin-right: 10px;\" alt=\"\"\n                                v-if=\"user.id === room.room_admin\">\n                           {{ user.name }} {{ user.last_name.toUpperCase() }}\n                        </div>\n                     </div>\n                  </div>\n               </w-drawer>\n            </div>\n\n            <w-dialog\n                  :width=\"500\"\n                  v-model=\"showPinned\"\n                  style=\"overflow-y: auto;\"\n            >\n               <div style=\"max-height: 70vh;\">\n                  <h3 style=\"margin-bottom: 10px;\">\n                     {{ pinned.length === 0 ? \"Aucun message épinglé\" : \"Liste des messages épinglés :\" }}</h3>\n                  <w-divider style=\"margin-bottom: 10px;\"></w-divider>\n                  <div :key=\"messages\" v-for=\"messages in pinned\" class=\"message-pinned\">\n                     <div>\n                        <strong style=\"text-decoration: underline\">{{ messages.sender }}</strong> : <br>\n                        {{ messages.content }} - {{ new Date(messages.message_date).toLocaleDateString() }} <br>\n                     </div>\n                     <button class=\"unpin-message\" v-if=\"rights.canModifyRoom\"\n                             @click=\"unpinMessage(messages.message_id)\">\n                        X\n                     </button>\n                  </div>\n               </div>\n            </w-dialog>\n         </div>\n      </div>\n\n      <div class=\"conv-messages\" v-if=\"rights.canReadMessage\">\n         <span v-if=\"messages.length === 0\"\n               style=\"align-self: center; font-size: 15px; font-weight: 500; color: #F4F4F4\"> Soyez le premier à envoyer un message à {{\n               $route.query.name\n            }}</span>\n         <Message :key=\"message\" v-for=\"message in messages\"\n                  :content=\"message.content\"\n                  :sender=\"message.sender\"\n                  :belong_to_myself=\"message.sender === getUser.username\"\n                  :message_date=\"message.message_date\"\n                  :message_id=\"message.message_id\"\n                  :edited=\"message.edited\"\n                  :can-pin=\"rights.canModifyRoom\"\n                  :can-remove=\"rights.canModifyRoom\"\n                  @pinnedMessage=\"pinnedMessage\"\n                  @deletedMessage=\"deletedMessage\"\n                  @editedMessage=\"editedMessage\"\n         />\n      </div>\n\n      <div class=\"conv-messages\" v-else>\n         <span style=\"align-self: center; font-size: 17px; font-weight: 600; color: #F4F4F4\">Vous n'avez pas la permission de lire les messages.</span>\n      </div>\n\n      <div class=\"conv-input\">\n         <span>\n            {{ getWritersAsText() }}\n         </span>\n         <div v-if=\"rights.canSendMessage\">\n            <input type=\"text\" autocomplete=\"off\" :placeholder=\"`Envoyer un message à ${ $route.query.name }`\"\n                   @keydown=\"actionInput\">\n            <div class=\"right-side-input\">\n               <EmojiPicker @selected-emoji=\"insertEmoji\" @closeEmoji=\"showEmoji = false\" v-if=\"showEmoji\"\n                            class=\"emojiPicker\"/>\n               <button style=\"height: 28px; width: 28px;\" @click=\"showEmoji = !showEmoji\">\n                  <img src=\"../../../../assets/happy.svg\" alt=\"Smiley\" style=\"width: 100%;\">\n               </button>\n               <label class=\"submit-file\" style=\"cursor: pointer;\">\n                  +\n                  <input type=\"file\" ref=\"uploadImage\" @change=\"uploadImage()\" style=\"height: 0; width: 0;\">\n               </label>\n            </div>\n         </div>\n         <span v-else style=\"font-size: 17px; font-weight: 600\">\n            Vous n'avez pas la permission d'envoyer des messages.\n         </span>\n      </div>\n   </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport {mapGetters} from \"vuex\";\nimport marked from \"marked\";\n\nimport SockJS from \"sockjs-client\";\nimport Stomp from \"stompjs\";\nimport emojis from \"@/assets/emojis_uncathegorized\";\nimport Message from \"@/components/common/Message\";\nimport EmojiPicker from \"@/components/common/EmojiPicker\";\n\nlet stompClient = null;\n\nexport default {\n   name: \"Channel\",\n   components: {\n      EmojiPicker,\n      Message,\n   },\n   computed: {\n      ...mapGetters(['getCurrentConv', 'getUser', 'getFriends', 'getGroup'])\n   },\n\n   data() {\n      return {\n         room: {},\n         writers: [],\n         messages: [],\n         pinned: [],\n\n         showUserList: false,\n         pinAdd: false,\n         showPinned: false,\n         showEmoji: false,\n\n         rights: {\n            canSendMessage: false,\n            canReadMessage: false,\n            canChangeGroup: false,\n            canModifyRoom: false,\n            canModifyNotes: false,\n            canStream: false,\n         }\n      }\n   },\n\n   methods: {\n      connect() {\n         let ws = new SockJS(\"/ws\");\n         stompClient = Stomp.over(ws);\n         // Comment the next line if you want to show websocket's logs\n         stompClient.debug = null\n\n         stompClient.connect({}, () => {\n            stompClient.subscribe(`/conversations/rooms/${this.getCurrentConv}`, (sdkEvent) => {\n               this.onMessageReceived(sdkEvent);\n            })\n         }, this.errorCallBack);\n      },\n      disconnect() {\n         if (stompClient !== null) {\n            stompClient.disconnect();\n         }\n      },\n      errorCallBack() {\n         setTimeout(() => {\n            this.connect();\n         }, 5000);\n      },\n      onMessageReceived(payload) {\n         let message = JSON.parse(payload.body);\n\n         if (message.sender !== this.getUser.username) {\n            if (message.type === \"MESSAGE\") {\n\n               this.messages.unshift({\n                  convUUID: message.convUUID,\n                  message_id: message.message_id,\n                  content: message.content,\n                  sender: message.sender,\n                  message_date: message.message_date,\n                  pinned: message.pinned,\n                  edited: false,\n               })\n            } else if (message.type === \"WRITING\") {\n               if (!this.writers.includes(message.sender)) {\n                  this.writers.push(message.sender)\n                  setTimeout(() => {\n                     this.writers.pop(message.sender)\n                  }, 5000)\n               }\n            } else if (message.type === \"PINNED\") {\n               this.messages.forEach(elt => {\n                  if (elt.message_id === message.message_id && !this.pinned.includes(elt))\n                     this.pinned.push(elt);\n               });\n            } else if (message.type === \"UNPINNED\") {\n               this.pinned = this.pinned.filter(elt => elt.message_id !== message.message_id);\n            } else if (message.type === \"DELETED\") {\n               this.messages = this.messages.filter(elt => elt.message_id !== message.message_id);\n               this.pinned = this.pinned.filter(elt => elt.message_id !== message.message_id);\n            } else if (message.type === \"EDITED\") {\n               this.messages.forEach(elt => {\n                  if (elt.message_id === message.message_id) {\n                     elt.content = message.content;\n                     elt.edited = true;\n                  }\n               });\n               this.pinned.forEach(elt => {\n                  if (elt.message_id === message.message_id) {\n                     elt.content = message.content;\n                     elt.edited = true;\n                  }\n               });\n            } else if (message.type === \"USERS_ADDED\") {\n               message.users.forEach(user => {\n                  if (this.containUsername(user)) {\n                     axios.get(`/api/users/findByUserName?username=${user}`).then(response => {\n                        this.users.push(response.data)\n                     })\n                  }\n               })\n               setTimeout(() => {\n                  this.getUserOfRoom()\n               }, 500)\n            } else if (message.type === \"USER_REMOVED\") {\n               this.users = this.users.filter(elt => elt.id !== message.user_id);\n               setTimeout(() => {\n                  this.getUserOfRoom()\n               }, 500)\n               if (message.user_id === this.getUser.id)\n                  location.replace(\"/messages\")\n            } else if (message.type === \"CHANGE_ADMIN\") {\n               this.roomAdminID = message.user_id;\n            }\n         }\n      },\n      send() {\n         let messageContent = document.querySelector(\".conv-input > div > input\");\n\n         if (messageContent && stompClient) {\n            axios.post(`/api/messages/sendMessage?room_uuid=${this.getCurrentConv}`, {\n               conv_uuid: this.getCurrentConv,\n               content: messageContent.value,\n               sender: this.getUser.username,\n               message_date: Date.now()\n            }).then(response => {\n               this.messages.unshift(response.data);\n               stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify(response.data))\n               messageContent.value = \"\";\n            });\n         }\n      },\n      writing() {\n         if (!this.writers.includes(this.getUser.username)) {\n            stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n               sender: this.getUser.username,\n               type: \"WRITING\"\n            }));\n         }\n      },\n\n\n      promoteAdmin(user_id) {\n         axios.put(`/api/rooms/changeAdmin?room_id=${this.getCurrentConv}&admin=${user_id}`)\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            user_id: user_id,\n            type: \"CHANGE_ADMIN\"\n         }));\n      },\n      unpinMessage(messageID) {\n         axios.put(`/api/messages/unpinMessage?message_id=${messageID}`).then(() => {\n            let c = 0;\n            this.pinned.forEach(elt => {\n               if (elt.message_id === messageID)\n                  this.pinned.splice(c, 1);\n               c++;\n            })\n            stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n               message_id: messageID,\n               type: \"UNPINNED\"\n            }));\n         })\n      },\n      pinnedMessage(messageID) {\n         this.messages.forEach(elt => {\n            if (elt.message_id === messageID && !this.pinned.includes(elt)) {\n               stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n                  message_id: messageID,\n                  type: \"PINNED\"\n               }));\n               this.pinned.push(elt);\n            }\n         })\n      },\n      deletedMessage(messageID) {\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            message_id: messageID,\n            type: \"DELETED\"\n         }));\n      },\n      editedMessage(messageID, content) {\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            message_id: messageID,\n            content: content,\n            type: \"EDITED\"\n         }));\n      },\n      async addUsers(users) {\n         for (const user of users) {\n            if (this.containUsername(user)) {\n               await axios.get(`/api/users/findByUserName?username=${user}`).then(response => {\n                  axios.post(`/api/rooms/addNewMember?room_id=${this.getCurrentConv}&user_id=${response.data.id}`)\n               })\n            }\n         }\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            users: users,\n            type: \"USERS_ADDED\"\n         }));\n      },\n      removerUser(user_id) {\n         axios.delete(`/api/rooms/removeMember?room_id=${this.getCurrentConv}&user_id=${user_id}`)\n         stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify({\n            user_id: user_id,\n            type: \"USER_REMOVED\"\n         }));\n      },\n      uploadImage() {\n         let file = this.$refs.uploadImage.files[0];\n         let temp = new FormData();\n         temp.append(\"file\", file);\n         axios({\n            url: `/api/uploadfile/uploadImageInChat?room_id=${this.getCurrentConv}`,\n            method: 'POST',\n            data: temp,\n            headers: {\n               Accept: 'application/json',\n               'Content-type': 'multipart/form-data'\n            }\n         }).then(response => {\n            if (response.data !== \"L'extension n'est pas un fichier jpg ou png, il ne peut donc pas être upload\" && response.data !== \"Erreur lors du téléchargement de l'image !\") {\n               axios.post(`/api/messages/sendMessage?room_uuid=${this.getCurrentConv}`, {\n                  conv_uuid: this.getCurrentConv,\n                  content: `![${\"Image de \" + this.getUser.username}](${response.data})`,\n                  sender: this.getUser.username,\n                  message_date: Date.now()\n               }).then(response => {\n                  this.messages.unshift(response.data);\n                  stompClient.send(`/conversations/rooms/${this.getCurrentConv}`, {}, JSON.stringify(response.data))\n               });\n            }\n         })\n      },\n      insertEmoji(emoji) {\n         document.querySelector(\".conv-input > div > input\").value += emoji;\n      },\n\n      filterEmoji(content) {\n         // Regex to match with the emoji string encode ( ':xxxxx_xxx_xxx_xxx:' where '_' is optionnal )\n         const regex = \":[a-zA-Z0-9]+(?:_[a-zA-Z0-9]+)*:\";\n         const emoji = [...content.matchAll(regex)];\n         if (emoji && emoji.length > 0) {\n            emoji.forEach(elt => {\n               if (emojis[elt[0].replaceAll(\":\", \"\")])\n                  content = content.replace(elt[0], emojis[elt[0].replaceAll(\":\", \"\")]);\n            })\n         }\n         return content;\n      },\n      filterMarkdown(content) {\n         return marked(content);\n      },\n      filterPing(content) {\n         if (content.includes(`@${this.getUser.username}`)) {\n            this.mention = true;\n            return content.replaceAll(`@${this.getUser.username}`, `@${this.getUser.name}`);\n         }\n         return content;\n      },\n      displayMessage(content, mardkdown, emojis, ping) {\n         if (ping)\n            content = this.filterPing(content);\n         if (emojis)\n            content = this.filterEmoji(content);\n         if (mardkdown)\n            content = this.filterMarkdown(content);\n         return content;\n      },\n\n\n      getUserOfRoom() {\n         axios.get(`/api/rooms/findUserOfRoom?room_id=${this.getCurrentConv}`).then(response => {\n            this.room.users = response.data;\n         });\n      },\n      getMessagesFromJSON() {\n         axios.get(`/api/messages?room_uuid=${this.getCurrentConv}`).then(response => {\n            this.messages = response.data.sort((a, b) => b.message_date - a.message_date);\n            this.pinned = this.messages.filter(elt => (elt.pinned === true));\n         });\n      },\n\n\n      actionInput(event) {\n         if (event.keyCode === 13 && document.querySelector(\".conv-input > div > input\").value !== \"\") {\n            this.send();\n            this.writers.pop(this.getUser.username);\n         } else if (event.keyCode !== 13) {\n            this.writing();\n            const inputContent = document.querySelector(\".conv-input > div > input\");\n            inputContent.value = this.displayMessage(inputContent.value, false, true, false);\n         }\n      },\n      getWritersAsText() {\n         if (this.writers.length === 0)\n            return \"\";\n         if (this.writers.length === 1)\n            return `${this.writers[0]} est en train d'écrire...`\n         if (this.writers.length > 4)\n            return \"Plusieurs personnes sont en train d'écrire\";\n         let res = \"\";\n         this.writers.forEach(elt => {\n            res += (elt === this.writers[this.writers.length - 1] ? `et ${elt}` : `${elt}${elt === this.writers[this.writers.length - 2] ? \"\" : \",\"} `)\n         });\n         return `${res} sont en train d'écrire...`;\n      },\n      containUsername(username) {\n         let bool = false;\n         this.getFriends.forEach(elt => {\n            if (elt.username === username)\n               bool = true;\n         })\n         return bool;\n      },\n   },\n\n   mounted() {\n      axios.get(`/api/rooms/findRoomByID?room_uuid=${this.getCurrentConv}`).then(response => {\n         this.room = response.data;\n         this.getMessagesFromJSON();\n         this.connect();\n      })\n\n      // Get rights of user in this group.\n      axios.get(`/api/groups/getRoleByGroupAndUser?user_id=${this.getUser.id}&group_id=${this.getGroup.groups_id}`).then(response => {\n         let fullRights = false;\n         response.data.forEach(elt => {\n            if (elt.rights === \"*\")\n               fullRights = true;\n         });\n\n         if (fullRights) {\n            this.rights = {\n               canSendMessage: true,\n               canReadMessage: true,\n               canChangeGroup: true,\n               canModifyRoom: true,\n               canModifyNotes: true,\n               canStream: true,\n            }\n         } else {\n            response.data.sort((a, b) => {\n               return a.rights.length - b.rights.length;\n            });\n\n            const temp = response.data[response.data.length - 1].rights;\n            this.rights = {\n               canSendMessage: temp.includes(\"s\"),\n               canReadMessage: temp.includes(\"r\"),\n               canChangeGroup: temp.includes(\"p\"),\n               canModifyRoom: temp.includes(\"c\"),\n               canModifyNotes: temp.includes(\"n\"),\n               canStream: temp.includes(\"l\"),\n            }\n         }\n      })\n   },\n   beforeRouteUpdate() {\n      this.disconnect();\n      axios.get(`/api/rooms/findRoomByID?room_uuid=${this.getCurrentConv}`).then(response => {\n         this.room = response.data;\n         this.getMessagesFromJSON();\n      })\n      this.connect();\n\n      // Get rights of user in this group.\n      axios.get(`/api/groups/getRoleByGroupAndUser?user_id=${this.getUser.id}&group_id=${this.getGroup.groups_id}`).then(response => {\n         let fullRights = false;\n         response.data.forEach(elt => {\n            if (elt.rights === \"*\")\n               fullRights = true;\n         });\n\n         if (fullRights) {\n            this.rights = {\n               canSendMessage: true,\n               canReadMessage: true,\n               canChangeGroup: true,\n               canModifyRoom: true,\n               canModifyNotes: true,\n               canStream: true,\n            }\n         } else {\n            response.data.sort((a, b) => {\n               return a.rights.length - b.rights.length;\n            });\n\n            const temp = response.data[response.data.length - 1].rights;\n            this.rights = {\n               canSendMessage: temp.includes(\"s\"),\n               canReadMessage: temp.includes(\"r\"),\n               canChangeGroup: temp.includes(\"p\"),\n               canModifyRoom: temp.includes(\"c\"),\n               canModifyNotes: temp.includes(\"n\"),\n               canStream: temp.includes(\"l\"),\n            }\n         }\n      })\n   },\n   unmounted() {\n      this.disconnect();\n   },\n}\n</script>\n\n<style scoped>\n.Channel {\n   width: 100%;\n   height: 100%;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: space-between;\n}\n\n.infos {\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   height: 50px;\n   margin-bottom: 5px;\n   width: 100%;\n}\n\n.infos > div {\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   width: 90%;\n   height: 100%;\n}\n\n.buttons {\n   position: relative;\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   height: 40px;\n   width: 80px;\n}\n\nbutton {\n   cursor: pointer;\n   background: none;\n   outline: none;\n   border: none;\n\n   height: 40px;\n   width: 40px;\n}\n\nbutton > img {\n   width: 60%;\n}\n\nbutton {\n   background: none;\n   border: none;\n   outline: none;\n   cursor: pointer;\n}\n\n.conv-info > div {\n   position: relative;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n   margin: auto;\n\n   width: 95%;\n   height: 60px;\n}\n\n.conv-input {\n   height: 100px;\n   width: 100%;\n\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: center;\n}\n\n.conv-input > div {\n   width: 90%;\n   height: 38px;\n   background-color: #F4F4F4;\n   border-radius: 100px;\n\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n\n   padding-left: 15px;\n   padding-right: 4px;\n}\n\n.conv-input > span {\n   color: #F4F4F4;\n   font-size: 12px;\n   width: 90%;\n   padding-left: 15px;\n   height: 20px;\n   margin-bottom: 5px;\n\n}\n\n.conv-messages {\n   height: calc(100% - 180px);\n   width: 95%;\n   align-self: center;\n\n   display: flex;\n   flex-direction: column-reverse;\n\n   overflow-y: auto;\n   overflow-x: hidden;\n   padding-right: 8px;\n}\n\n.right-side-input {\n   position: relative;\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n\n   height: 38px;\n   width: 70px;\n}\n\n.message-pinned {\n   display: flex;\n   align-items: center;\n   justify-content: space-between;\n   margin-top: 10px;\n}\n\n.message-pinned > div {\n   background-color: #4f4b5a;\n   color: #F4F4F4;\n   padding: 10px;\n   width: 90%;\n\n   border-radius: 4px;\n}\n\n.submit-file {\n   background-color: #454150;\n   height: 32px;\n   width: 32px;\n   color: #F4F4F4;\n   font-size: 30px;\n   font-weight: 600;\n\n   display: flex;\n   align-items: center;\n   justify-content: center;\n\n   border-radius: 50%;\n}\n\n.submit-file:hover {\n   background-color: #E85C5C;\n   color: #F4F4F4;\n}\n\n.conv-input > div > input {\n   outline: none;\n   border: none;\n   background: none;\n\n   max-width: calc(100% - 100px);\n   width: 1000px;\n   height: 30px;\n   font-size: 15px;\n   color: #454150;\n}\n\n.conv-input > div > input::placeholder {\n   font-size: 15px;\n   color: #909090;\n}\n\n#pin > img {\n   width: 20px;\n   height: 20px;\n}\n\n#pin {\n   outline: none;\n   background: none;\n   border: none;\n\n   cursor: pointer;\n}\n\n#pin:hover {\n   transform: scale(1.1) rotate(-10deg);\n}\n\n.unpin-message {\n   height: 30px;\n   width: 30px;\n   font-weight: 600;\n   font-size: 17px;\n   border-radius: 29px;\n   background-color: #454150;\n   color: #f4f4f4;\n   cursor: pointer;\n}\n\n.unpin-message:hover {\n   transform: scale(1.1);\n   background-color: #E85C5C;\n}\n\n.emojiPicker {\n   position: absolute;\n   top: -10px;\n   left: 32px;\n   transform: translateX(-100%) translateY(-100%);\n}\n\n.user-list {\n   padding: 20px;\n   width: 100%;\n   height: 100%;\n\n   display: flex;\n   align-items: flex-start;\n   justify-content: flex-start;\n   flex-direction: column;\n}\n\n.user {\n   position: relative;\n   width: 100%;\n   height: 40px;\n   background-color: #8F8F8F;\n   border-radius: 12px;\n\n   display: flex;\n   align-items: center;\n   justify-content: flex-start;\n   padding-left: 15px;\n\n   color: #F4F4F4;\n   font-size: 18px;\n   font-weight: 600;\n   margin-bottom: 10px;\n}\n\n.user > div {\n   position: absolute;\n   right: 20px;\n\n   display: flex;\n   flex-direction: row;\n   align-items: center;\n   justify-content: space-between;\n}\n\n.user > div > button {\n   font-size: 18px;\n   width: 22px;\n   height: 22px;\n   font-weight: 600;\n   color: #F4F4F4;\n}\n\n.role {\n   display: flex;\n   flex-direction: column;\n   align-items: center;\n   justify-content: flex-start;\n\n   width: 100%;\n   color: #F4F4F4;\n   font-size: 17px;\n   font-weight: 600;\n   margin-bottom: 10px;\n}\n\n.role > span {\n   margin-bottom: 10px;\n   width: 100%;\n   height: 20px;\n}\n\n@keyframes appear-opacity {\n   from {\n      /* transform: translateX(100%); */\n      opacity: 0;\n   }\n   to {\n      /* transform: translateX(0); */\n      opacity: 1;\n   }\n}\n</style>","import { render } from \"./Channel.vue?vue&type=template&id=8ed8cba4&scoped=true\"\nimport script from \"./Channel.vue?vue&type=script&lang=js\"\nexport * from \"./Channel.vue?vue&type=script&lang=js\"\n\nimport \"./Channel.vue?vue&type=style&index=0&id=8ed8cba4&scoped=true&lang=css\"\n\nimport exportComponent from \"/mnt/DATA/Projets/discoodle/frontend/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-8ed8cba4\"]])\n\nexport default __exports__"],"sourceRoot":""}